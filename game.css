<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PDF Viewer</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        #pdf-container {
            max-width: 100%;
            overflow-y: scroll;
            height: 80vh; /* Adjust as needed */
            border: 1px solid #ddd;
            padding: 10px;
        }
        canvas {
            display: block;
            margin: 10px 0;
            border: 1px solid black;
        }
        #controls {
            margin: 20px 0;
        }
        #prev, #next {
            padding: 10px 20px;
            margin: 0 5px;
            border: 1px solid #ccc;
            background: #f0f0f0;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>PDF Viewer</h1>
    <input type="file" id="file-input" accept="application/pdf"/>
    <div id="controls">
        <button id="prev">Previous</button>
        <button id="next">Next</button>
    </div>
    <div id="pdf-container"></div>

    <!-- Load PDF.js from the official CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.8.162/pdf.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.8.162/pdf.worker.min.js"></script>
    <script>
        const fileInput = document.getElementById('file-input');
        const pdfContainer = document.getElementById('pdf-container');
        const prevButton = document.getElementById('prev');
        const nextButton = document.getElementById('next');
        let pdfDoc = null;
        let pageNum = 1;
        const scale = 1.5;

        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.8.162/pdf.worker.min.js';

        fileInput.addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const fileReader = new FileReader();
                fileReader.onload = function() {
                    const arrayBuffer = this.result;
                    pdfjsLib.getDocument({ data: arrayBuffer }).promise.then(function(pdf) {
                        pdfDoc = pdf;
                        pageNum = 1;
                        renderPage(pageNum);
                    }).catch(function(error) {
                        console.error('Error loading PDF: ', error);
                    });
                };
                fileReader.readAsArrayBuffer(file);
            }
        });

        function renderPage(num) {
            pdfDoc.getPage(num).then(function(page) {
                const viewport = page.getViewport({ scale: scale });
                const canvas = document.createElement('canvas');
                canvas.width = viewport.width;
                canvas.height = viewport.height;
                const canvasContext = canvas.getContext('2d');

                pdfContainer.innerHTML = ''; // Clear previous content
                pdfContainer.appendChild(canvas);

                const renderContext = {
                    canvasContext: canvasContext,
                    viewport: viewport
                };
                page.render(renderContext);
            }).catch(function(error) {
                console.error('Error rendering page: ', error);
            });
        }

        prevButton.addEventListener('click', function() {
            if (pageNum <= 1) return;
            pageNum--;
            renderPage(pageNum);
        });

        nextButton.addEventListener('click', function() {
            if (!pdfDoc || pageNum >= pdfDoc.numPages) return;
            pageNum++;
            renderPage(pageNum);
        });
    </script>
</body>
</html>
